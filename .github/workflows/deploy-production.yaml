name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Release
        required: true

env:
  IMAGE_NAME: get-this

jobs:
  deploy-to-production:
    name: Deploy ${{ github.event.inputs.tag }} to prod
    runs-on: ubuntu-latest
    steps:
    - name: Clone latest repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Check that the tag exists in repo
      id: tag_check
      run: |
        if $(git rev-parse 'refs/tags/${{ github.event.inputs.tag }}' &> /dev/null); then
          
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "Couldn't figure out tag from input: ${{ github.event.inputs.tag }}"
          echo "Aborting deployment."
          false
        fi
    - name: Generate app token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.SEARCH_CONFIG_REPO_RW_APP_ID }}
        installation_id: ${{ secrets.SEARCH_CONFIG_REPO_RW_INSTALL_ID }}
        private_key: ${{ secrets.SEARCH_CONFIG_REPO_RW_KEY }}
    - name: Set message
      id: set_message
      run: |
        echo "TITLE=Update get-this/production to ${{ steps.tag_check.outputs.tag }}" >> $GITHUB_OUTPUT 
        echo "DESCRIPTION=Originating repository is ${{ github.repository }}\nRun ID is $GITHUB_RUN_ID\nUser is ${{ github.actor }}" >> $GITHUB_OUTPUT
    - name: Set Payload
      run: |
        data=$(echo '[
          { 
            "environment": "get-this/production", 
            "key": "web", 
            "image": "ghcr.io/mlibrary/${{ env.IMAGE_NAME }}:${{ steps.tag_check.outputs.tag }}" 
          }
        ]' | python -c 'import json, sys;var=json.dumps(json.load(sys.stdin));print(json.dumps(var))' )
        echo "PAYLOAD={\"title\": \"${{ steps.set_message.outputs.TITLE }}\",\"description\": \"${{ steps.set_message.outputs.DESCRIPTION }}\", \"data\": $data }" >> $GITHUB_ENV
    - name: echo payload
      run: echo $PAYLOAD
    - name: Send the message
      uses: peter-evans/repository-dispatch@v2
      with:
        event-type: update-image
        token: ${{ steps.generate_token.outputs.token }}
        repository: mlibrary/search-kube
        client-payload: ${{ env.PAYLOAD }}
