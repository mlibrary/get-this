<section class="get-option" open>
  <div class="get-this-option-header">
    <h2 class="get-option-title"><%=option.title %></h2><br>
    <p><%=option.subtitle %></p>
  </div>
  <form method="post" action="/booking">
    <label for="pickup-location">Pickup location</label>
    <select id="pickup-location" name="pickup-location" style="margin-bottom: var(--space-medium);">
      <% option.pickup_locations.each do |pickup_location| %>
        <option value="<%=pickup_location.code%>"><%=pickup_location.display%></option>
      <% end %>
    </select>

    <label for="date">Pickup date (YYYY-MM-DD)</label>
    <% if !option.unavailable_dates.empty? %>
      <div class="message message--warning">
        <span class="strong">Item availability:</span> This item is unavailable on the upcoming dates: <%=option.unavailable_dates_text%>
      </div>
    <% end %>
    <duet-date-picker identifier="date"></duet-date-picker>

    <button class="button-most-important">Schedule pickup</button>
  </form>
</section>

<script>
  const addDays = (date, days = 0) => {
    const result = new Date(date);
    result.setDate(result.getDate() + days);
    return result;
  }

  const today = new Date();
  const start = addDays(today);
  const end = new Date(today.setMonth(today.getMonth() + 9));
  const unavailableDates = [<%= option.unavailable_dates_formatted %>];

  const changeFormat = (date) => {
    return date.toISOString().slice(0,10);
  }

  const isDateDisabled = (date) => {
    const outsideRange = date < start || date > end;
    const unavailable = unavailableDates.includes(changeFormat(date));
    return outsideRange || unavailable;
  }

  const datePicker = document.querySelector('duet-date-picker');
  datePicker.isDateDisabled = isDateDisabled;
  datePicker.max = changeFormat(end);
  datePicker.min = changeFormat(start);
</script>
