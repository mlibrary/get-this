<section class="get-option container">
  <h2><%=option.title %></h2>
  <p><%=option.subtitle %></p>

  <form method="post" action="/booking">
    <label for="pickup-location">Pickup location</label>
    <%= erb :"components/dropdown", :locals => { id: "pickup-location", options: option.pickup_locations, value: "code", label: "display" } %>

    <label for="date">Pickup date (YYYY-MM-DD)</label>
    <small>Contact Askwith Media Library at askwithmedia@umich.edu or 734-764-5360 if you have questions or want to pick up an item in fewer than three days. Loans are typically for 7 days.</small>
    <% if !option.unavailable_dates.empty? %>
      <%= erb :'components/message', :locals => { message: '<span class="strong">Item availability:</span> This item is unavailable on the upcoming dates: ' + option.unavailable_dates_text, kind: 'warning' } %>
    <% end %>
    <duet-date-picker identifier="date"></duet-date-picker>

    <button class="button-most-important">Schedule pickup</button>
  </form>
</section>

<script>
  const addDays = (date, days = 0) => {
    const result = new Date(date);
    result.setDate(result.getDate() + days);
    return result;
  }

  const today = new Date();
  const start = addDays(today);
  const end = new Date(today.setMonth(today.getMonth() + 9));
  const unavailableDates = [<%= option.unavailable_dates_formatted %>];

  const changeFormat = (date) => {
    return date.toISOString().slice(0,10);
  }

  const isDateDisabled = (date) => {
    const outsideRange = date < start || date > end;
    const unavailable = unavailableDates.includes(changeFormat(date));
    return outsideRange || unavailable;
  }

  const datePicker = document.querySelector('duet-date-picker');
  datePicker.isDateDisabled = isDateDisabled;
  datePicker.max = changeFormat(end);
  datePicker.min = changeFormat(start);
</script>
